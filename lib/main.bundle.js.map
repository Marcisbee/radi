{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///(webpack)/buildin/harmony-module.js","webpack:///./src/component/Component.js","webpack:///./src/component/index.js","webpack:///./src/component/utils/PrivateStore.js","webpack:///./src/consts/GLOBALS.js","webpack:///./src/index.js","webpack:///./src/listen/Listener.js","webpack:///./src/listen/index.js","webpack:///./src/mount.js","webpack:///./src/r/appendChild.js","webpack:///./src/r/appendChildren.js","webpack:///./src/r/index.js","webpack:///./src/r/setAttributes.js","webpack:///./src/r/setStyles.js","webpack:///./src/r/utils/AttributeListener.js","webpack:///./src/r/utils/ElementListener.js","webpack:///./src/r/utils/StyleListener.js","webpack:///./src/r/utils/appendListenerToElement.js","webpack:///./src/r/utils/ensureArray.js","webpack:///./src/r/utils/fuseDom.js","webpack:///./src/r/utils/getElementFromQuery.js","webpack:///./src/r/utils/listenerToNode.js","webpack:///./src/r/utils/parseClass.js","webpack:///./src/r/utils/parseValue.js","webpack:///./src/r/utils/setStyle.js","webpack:///./src/utils/clone.js","webpack:///./src/utils/generateId.js","webpack:///./src/utils/remountActiveComponents.js","webpack:///./src/utils/skipInProductionAndTest.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACvBA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,WAAW;AACxB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,gBAAgB;AAChB,iBAAiB;AACjB;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA,4DAA4D;AAC5D;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA,qBAAqB,qBAAqB;AAC1C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,oFAAoF,IAAI;AACxF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC1LA;;AAEA;;;;;;;;;;;;;;;;ACFA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,EAAE;AACf,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/DA;AAAA;AACA,yBAAyB;AACzB;AACA;AACA,uBAAuB;AACvB,gBAAgB;AAChB;;AAEA;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;;AAEA;;;;;;;;;;;;;;;AC/CA;AAAA;AACA;;AAEA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,EAAE;AACf,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,EAAE;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,eAAe;AAC5B,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AChGA;;AAEA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,aAAa;AACb;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;;AAEA;AACA,WAAW,UAAU;AACrB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qBAAqB,qBAAqB;AAC1C;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;;;;;;ACxCA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,YAAY;AACvB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;;;AC/DA;;AAEA;AACA,WAAW,YAAY;AACvB,WAAW,IAAI;AACf;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;ACVA;AACA;AACA;;AAEA;AACA,WAAW,EAAE;AACb,WAAW,OAAO;AAClB,WAAW,KAAK;AAChB,aAAa;AACb;AACA;AACA;AACA,mDAAmD;AACnD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;;;;;AC7BA;AAAA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;ACzFA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,WAAW,YAAY;AACvB,WAAW,uBAAuB;AAClC,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;;;;ACzCA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,aAAa,KAAK;AAClB;AACA,eAAe,kCAAkC;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL,oFAAmC,6BAA6B;AAChE;AACA;;AAEA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC/DA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,aAAa,KAAK;AAClB;AACA,eAAe,oBAAoB;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,EAAE;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC7DA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,aAAa,KAAK;AAClB;AACA,eAAe,8BAA8B;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,EAAE;AACf;AACA;AACA;AACA;;AAEA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC3CA;;AAEA;AACA,WAAW,SAAS;AACpB,WAAW,YAAY;AACvB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;;;;;;;;;;;;ACbA;AAAA;AACA,WAAW,EAAE;AACb,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mCAAmC,QAAQ;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC,QAAQ;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,WAAW,YAAY;AACvB,WAAW,YAAY;AACvB,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;AC7JA;AAAA;AACA,WAAW,EAAE;AACb,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;ACdA;AACA;;AAEA;AACA,WAAW,EAAE;AACb,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACjBA;AAAA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACXA;AAAA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,yDAAyD,MAAM;;AAE/D;;;;;;;;;;;;;;;;ACPA;AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;AC5BA;AAAA;AACA,WAAW,EAAE;AACb,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;ACtBA;AAAA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB,4CAA4C;;AAE5C;AACA;AACA;AACA,+EAA+E;AAC/E;AACA;AACA;;AAEA;;;;;;;;;;;;;;;AClBA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;;;;;;;;;;;;ACVA;AAAA;AACA,eAEA;AACA;AACA;;AAEA","file":"main.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","module.exports = function(originalModule) {\r\n\tif (!originalModule.webpackPolyfill) {\r\n\t\tvar module = Object.create(originalModule);\r\n\t\t// module.parent = undefined by default\r\n\t\tif (!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"exports\", {\r\n\t\t\tenumerable: true\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n","/* eslint-disable guard-for-in */\n/* eslint-disable no-restricted-syntax */\n/* eslint-disable no-continue */\n// -- we need those for..in loops for now!\n\nimport GLOBALS from '../consts/GLOBALS';\nimport generateId from '../utils/generateId';\nimport PrivateStore from './utils/PrivateStore';\nimport fuseDom from '../r/utils/fuseDom';\nimport clone from '../utils/clone';\nimport skipInProductionAndTest from '../utils/skipInProductionAndTest';\n\nexport default class Component {\n  /**\n   * @param {Node[]|*[]} [children]\n   * @param {object} [o.props]\n   */\n  constructor(children, props) {\n    this.addNonEnumerableProperties({\n      $id: generateId(),\n      $name: this.constructor.name,\n      $config: (typeof this.config === 'function') ? this.config() : {\n        listen: true,\n      },\n      $store: {},\n      $events: {},\n      $privateStore: new PrivateStore(),\n    });\n\n    this.on = (typeof this.on === 'function') ? this.on() : {};\n    this.children = [];\n\n    // Appends headless components\n    this.copyObjToInstance(GLOBALS.HEADLESS_COMPONENTS, 'head');\n\n    this.state = Object.assign(\n      (typeof this.state === 'function') ? this.state() : {},\n      props || {}\n    );\n\n    skipInProductionAndTest(() => Object.freeze(this.state));\n\n    if (children) this.setChildren(children);\n  }\n\n  /**\n   * @returns {HTMLElement}\n   */\n  render() {\n    if (typeof this.view !== 'function') return '';\n    const rendered = this.view();\n    if (Array.isArray(rendered)) {\n      for (let i = 0; i < rendered.length; i++) {\n        rendered[i].destroy = this.destroy.bind(this);\n      }\n    } else {\n      rendered.destroy = this.destroy.bind(this);\n    }\n    this.html = rendered;\n    return rendered;\n  }\n\n  /**\n   * @param {object} props\n   * @returns {Component}\n   */\n  setProps(props) {\n    this.setState(props);\n    return this;\n  }\n\n  /**\n   * @param {Node[]|*[]} children\n   */\n  setChildren(children) {\n    this.children = children;\n    this.setState();\n    for (let i = 0; i < this.children.length; i++) {\n      if (typeof this.children[i].when === 'function') {\n        this.children[i].when('update', () => this.setState());\n      }\n    }\n    return this;\n  }\n\n  /**\n   * @private\n   * @param {object} obj\n   * @param {string} type\n   */\n  copyObjToInstance(obj, type) {\n    for (const key in obj) {\n      if (typeof this[key] !== 'undefined') {\n        throw new Error(`[Radi.js] Error: Trying to write for reserved variable \\`${key}\\``);\n      }\n      this[key] = obj[key];\n      if (type === 'head') this[key].when('update', () => this.setState());\n    }\n  }\n\n  /**\n   * @private\n   * @param {object} obj\n   */\n  addNonEnumerableProperties(obj) {\n    for (const key in obj) {\n      if (typeof this[key] !== 'undefined') continue;\n      Object.defineProperty(this, key, {\n        value: obj[key],\n      });\n    }\n  }\n\n  /**\n   * @param {string} key\n   * @param {Listener} listener\n   */\n  addListener(key, listener) {\n    this.$privateStore.addListener(key, listener);\n  }\n\n  mount() {\n    this.trigger('mount');\n  }\n\n  destroy() {\n    this.trigger('destroy');\n    if (this.html && this.html !== ''\n      && typeof this.html.remove === 'function') this.html.remove();\n  }\n\n  /**\n   * @param {string} key\n   * @param {function} fn\n   */\n  when(key, fn) {\n    if (typeof this.$events[key] === 'undefined') this.$events[key] = [];\n    this.$events[key].push(fn);\n  }\n\n  /**\n   * @param {string} key\n   * @param {*} value\n   */\n  trigger(key, value) {\n    if (typeof this.on[key] === 'function') {\n      this.on[key].call(this, value);\n    }\n\n    if (typeof this.$events[key] !== 'undefined') {\n      for (const i in this.$events[key]) {\n        this.$events[key][i].call(this, value);\n      }\n    }\n  }\n\n  /**\n   * @param {object} newState\n   */\n  setState(newState) {\n    if (typeof newState === 'object') {\n      const oldstate = clone(this.state);\n      this.state = Object.assign(oldstate, newState);\n\n      skipInProductionAndTest(() => Object.freeze(this.state));\n\n      if (this.$config.listen) {\n        this.$privateStore.setState(newState);\n      }\n    } else {\n      // console.error('[Radi.js] ERROR: Action did not return object to merge with state');\n    }\n\n    if (!this.$config.listen && typeof this.view === 'function' && this.html) {\n      fuseDom.fuse(this.html, this.view());\n    }\n    this.trigger('update');\n    return this.state;\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  static isComponent() {\n    return true;\n  }\n}\n","import Component from './Component';\n\nexport default Component;\n","import Component from '../Component'\n\nexport default class PrivateStore {\n  constructor() {\n    this.store = {};\n  }\n\n  /**\n   * @param {string} key\n   * @param {Listener} listener\n   */\n  addListener(key, listener) {\n    if (typeof this.store[key] === 'undefined') {\n      this.createItemWrapper(key);\n    }\n    this.store[key].listeners.push(listener);\n    listener.handleUpdate(this.store[key].value);\n\n    return listener;\n  }\n\n  /**\n   * setState\n   * @param {*} newState\n   * @returns {*}\n   */\n  setState(newState) {\n    // Find and trigger changes for listeners\n    for (const key of Object.keys(newState)) {\n      if (typeof this.store[key] === 'undefined') {\n        this.createItemWrapper(key);\n      }\n      this.store[key].value = newState[key];\n\n      this.triggerListeners(key);\n    }\n    return newState;\n  }\n\n  /**\n   * createItemWrapper\n   * @private\n   * @param {string} key\n   * @returns {object}\n   */\n  createItemWrapper(key) {\n    return this.store[key] = {\n      listeners: [],\n      value: null,\n    };\n  }\n\n  /**\n   * triggerListeners\n   * @private\n   * @param {string} key\n   */\n  triggerListeners(key) {\n    const item = this.store[key];\n    if (item) {\n      item.listeners.forEach(listener => listener.handleUpdate(item.value));\n    }\n  }\n}\n","const GLOBALS = {\n  HEADLESS_COMPONENTS: {},\n  FROZEN_STATE: false,\n  VERSION: '0.3.1',\n  ACTIVE_COMPONENTS: {},\n  HTML_CACHE: {},\n};\n\nexport default GLOBALS;\n","import GLOBALS from './consts/GLOBALS';\nimport r from './r';\nimport listen from './listen';\nimport component from './component';\nimport Component from './component';\nimport mount from './mount';\nimport remountActiveComponents from './utils/remountActiveComponents';\n\n// Descriptor for actions\nfunction action(target, key, descriptor) {\n  const act = descriptor.value;\n  descriptor.value = function (...args) {\n    this.setState.call(this, act.call(this, ...args));\n  }\n  return descriptor;\n}\n\nconst Radi = {\n  version: GLOBALS.VERSION,\n  activeComponents: GLOBALS.ACTIVE_COMPONENTS,\n  r,\n  listen,\n  l: listen,\n  component,\n  Component,\n  action,\n  headless: (key, comp) => {\n    // TODO: Validate component and key\n    const mountedComponent = new comp();\n    mountedComponent.mount();\n    return GLOBALS.HEADLESS_COMPONENTS['$'.concat(key)] = mountedComponent;\n  },\n  mount,\n  freeze: () => {\n    GLOBALS.FROZEN_STATE = true;\n  },\n  unfreeze: () => {\n    GLOBALS.FROZEN_STATE = false;\n    remountActiveComponents();\n  },\n};\n\n// Pass Radi instance to plugins\nRadi.plugin = (fn, ...args) => fn(Radi, ...args);\n\nif (window) window.$Radi = Radi;\n\nmodule.exports = Radi;\n","/* eslint-disable no-param-reassign */\n/* eslint-disable no-shadow */\n\nexport default class Listener {\n  /**\n   * @param {Component} component\n   * @param {...string} path\n   */\n  constructor(component, ...path) {\n    this.component = component;\n    [this.key] = path;\n    this.childPath = path.slice(1, path.length);\n    this.path = path;\n    this.value = null;\n    this.changeListeners = [];\n    this.processValue = value => value;\n    this.disabled = false;\n\n    this.component.addListener(this.key, this);\n    if (this.component.state) {\n      this.handleUpdate(this.component.state[this.key]);\n    }\n  }\n\n  /**\n   * @param {*} value\n   * @return {*}\n   */\n  extract(value) {\n    if (value.value instanceof Listener) {\n      value.value.disabled = true;\n      return this.extract(value.value);\n    }\n    return value;\n  }\n\n  /**\n   * @param {*} value\n   */\n  handleUpdate(value) {\n    // TODO: Destroy unnecessary listeners\n    this.value = this.processValue(this.getShallowValue(value), this.value);\n\n    if (this.disabled) {\n      if (typeof this.disabled === 'function') this.disabled(this.value);\n      return this.value;\n    }\n    if (this.value instanceof Listener) {\n      if (this.value.disabled) return this.value;\n      this.value = this.extract(this.value);\n      this.value.disabled = (value) => {\n        this.changeListeners.forEach(changeListener => changeListener(value));\n      };\n    }\n\n    this.changeListeners.forEach(changeListener => changeListener(this.value));\n    return this.value;\n  }\n\n  /**\n   * @param {function(*)} changeListener\n   */\n  onValueChange(changeListener) {\n    this.changeListeners.push(changeListener);\n    changeListener(this.value);\n  }\n\n  /**\n   * @param {function(*): *} processValue\n   * @returns {function(*): *}\n   */\n  process(processValue) {\n    this.processValue = processValue;\n    this.handleUpdate(this.value);\n    return this;\n  }\n\n  /**\n   * @private\n   * @param {*} value\n   */\n  getShallowValue(value) {\n    if (typeof value !== 'object' || !this.childPath) return value;\n    let shallowValue = value;\n    /*eslint-disable*/\n    for (const pathNestingLevel of this.childPath) {\n      if (shallowValue === null\n        || !shallowValue[pathNestingLevel]\n        && typeof shallowValue[pathNestingLevel] !== 'number') {\n        shallowValue = null\n      } else {\n        shallowValue = shallowValue[pathNestingLevel]\n      }\n    }\n    return shallowValue;\n  }\n}\n","import Listener from './Listener';\n\n/**\n * The listen function is used for dynamically binding a component property\n * to the DOM. Also commonly imported as 'l'.\n * @param {Component} component\n * @param {...string} path\n * @returns {Listener}\n */\nconst listen = (component, ...path) =>\n  new Listener(component, ...path);\n\nexport default listen;\n","import Component from './component/Component';\nimport appendChild from './r/appendChild';\nimport fuseDom from './r/utils/fuseDom';\n\n/**\n * @param {Component} component\n * @param {string} id\n * @returns {HTMLElement|Node}\n */\nconst mount = (component, id) => {\n  const container = document.createDocumentFragment()\n  const slot = typeof id === 'string' ? document.getElementById(id) : id;\n  const rendered =\n    (component instanceof Component || component.render) ? component.render() : component;\n\n  if (Array.isArray(rendered)) {\n    for (var i = 0; i < rendered.length; i++) {\n      mount(rendered[i], container);\n    }\n  } else {\n    // Mount to container\n    appendChild(container)(rendered);\n  }\n\n  // Mount to element\n  slot.appendChild(container);\n\n  if (typeof slot.destroy !== 'function') {\n    slot.destroy = () => {\n      for (var i = 0; i < rendered.length; i++) {\n        fuseDom.destroy(rendered[i]);\n      }\n    }\n  }\n\n  if (typeof component.mount === 'function') component.mount();\n\n  return slot;\n}\n\nexport default mount;\n","/* eslint-disable no-param-reassign */\n/* eslint-disable no-console */\n\nimport mount from '../mount';\nimport Component from '../component/Component';\nimport Listener from '../listen/Listener';\nimport appendChildren from './appendChildren';\nimport appendListenerToElement from './utils/appendListenerToElement';\n\n/**\n * @param {HTMLElement} element\n * @returns {function(*)}\n */\nconst appendChild = element => child => {\n  if (!child && typeof child !== 'number') {\n    // Needs to render every child, even empty ones to preserve dom hierarchy\n    child = '';\n  }\n\n  if (child instanceof Component) {\n    mount(child, element);\n    return;\n  }\n\n  if (child instanceof Listener) {\n    appendListenerToElement(child, element);\n    return;\n  }\n\n  if (Array.isArray(child)) {\n    appendChildren(element, child);\n    return;\n  }\n\n  // Handles lazy loading components\n  if (typeof child === 'function') {\n    const placeholder = document.createElement('div');\n    const el = element.appendChild(placeholder);\n    el.__async = true;\n    child().then(local => {\n      if (typeof local.default === 'function'\n        && local.default.isComponent\n        && local.default.isComponent()) {\n        /*eslint-disable*/\n        appendChild(el)(new local.default());\n        // el.__async = false;\n        /* eslint-enable */\n      } else {\n        appendChild(el)(local.default);\n        // el.__async = false;\n      }\n    }).catch(console.warn);\n    return;\n  }\n\n  if (child instanceof Node) {\n    element.appendChild(child);\n    return;\n  }\n\n  element.appendChild(document.createTextNode(child));\n};\n\nexport default appendChild;\n","import appendChild from './appendChild';\n\n/**\n * @param {HTMLElement} element\n * @param {*[]} children\n */\nconst appendChildren = (element, children) => {\n  children.forEach(appendChild(element));\n};\n\nexport default appendChildren;\n","import setAttributes from './setAttributes';\nimport getElementFromQuery from './utils/getElementFromQuery';\nimport appendChildren from './appendChildren';\n\n/**\n * @param {*} query\n * @param {object} props\n * @param {...*} children\n * @returns {(HTMLElement|Component)}\n */\nconst r = (Query, props, ...children) => {\n  if (typeof Query === 'function' && Query.isComponent) {\n    return new Query(children).setProps(props || {});\n  }\n\n  if (typeof Query === 'function') {\n    const propsWithChildren = props || {};\n    propsWithChildren.children = children;\n    return Query(propsWithChildren);\n  }\n\n  const element = getElementFromQuery(Query);\n\n  if (props !== null) setAttributes(element, props);\n  appendChildren(element, children);\n\n  return element;\n};\n\nexport default r;\n","/* eslint-disable guard-for-in */\n/* eslint-disable no-restricted-syntax */\n/* eslint-disable no-continue */\n// -- we need those for..in loops for now!\n\n/* eslint-disable no-param-reassign */\n// -- until this can be rewritten as a pure function, we need to reassign.\n\nimport setStyles from './setStyles';\nimport Listener from '../listen/Listener';\nimport parseClass from './utils/parseClass';\nimport AttributeListener from './utils/AttributeListener';\n\n/**\n * @param {HTMLElement} element\n * @param {object} attributes\n */\nconst setAttributes = (element, attributes) => {\n  for (const key in attributes) {\n    const value = attributes[key];\n\n    if (typeof value === 'undefined') continue;\n\n    if (!value && typeof value !== 'number') {\n      // Need to remove falsy attribute\n      element.removeAttribute(key);\n      continue;\n    }\n\n    if (key.toLowerCase() === 'style') {\n      setStyles(element, value);\n      continue;\n    }\n\n    if (value instanceof Listener) {\n      new AttributeListener({\n        attributeKey: key,\n        listener: value,\n        element,\n      }).attach();\n      continue;\n    }\n\n    if (key.toLowerCase() === 'class' || key.toLowerCase() === 'classname') {\n      element.setAttribute('class', parseClass(value));\n      continue;\n    }\n\n    // Handles events 'on<event>'\n    if (key.substring(0, 2).toLowerCase() === 'on') {\n      if (key.substring(0, 8).toLowerCase() === 'onsubmit') {\n        element[key] = (e) => {\n          const data = [];\n          const inputs = e.target.elements || [];\n          for (const input of inputs) {\n            if (input.name !== '') {\n              const item = {\n                name: input.name,\n                el: input,\n                type: input.type,\n                default: input.defaultValue,\n                value: input.value,\n                set(val) {\n                  this.el.value = val;\n                },\n                reset(val) {\n                  this.el.value = val;\n                  this.el.defaultValue = val;\n                },\n              };\n              data.push(item);\n              Object.defineProperty(data, item.name, {\n                value: item,\n              });\n            }\n          }\n\n          return value(e, data);\n        };\n      } else {\n        element[key] = value;\n      }\n      continue;\n    }\n\n    element.setAttribute(key, value);\n  }\n};\n\nexport default setAttributes;\n","import Listener from '../listen/Listener';\n/* eslint-disable guard-for-in */\n/* eslint-disable no-restricted-syntax */\n// -- we need those for..in loops for now!\n\n/* eslint-disable no-param-reassign */\n// -- until this can be rewritten as a pure function, we need to reassign.\n\nimport AttributeListener from './utils/AttributeListener';\nimport setStyle from './utils/setStyle';\n\n/**\n * @param {HTMLElement} element\n * @param {string|object|Listener} styles\n * @returns {CSSStyleDeclaration}\n */\nconst setStyles = (element, styles) => {\n  if (typeof styles === 'string') {\n    element.style = styles;\n  }\n\n  if (typeof styles !== 'object' || Array.isArray(styles)) {\n    return element.style;\n  }\n\n  if (styles instanceof Listener) {\n    new AttributeListener({\n      attributeKey: 'style',\n      listener: styles,\n      element,\n    }).attach();\n    return element.style;\n  }\n\n  for (const property in styles) {\n    setStyle(element, property, styles[property]);\n  }\n\n  return element.style;\n};\n\nexport default setStyles;\n","import setAttributes from '../setAttributes';\n\nexport default class AttributeListener {\n  /**\n   * @param {object} options\n   * @param {string} options.attributeKey\n   * @param {Listener} options.listener\n   * @param {Node} options.element\n   */\n  constructor({ attributeKey, listener, element }) {\n    this.attributeKey = attributeKey;\n    this.listener = listener;\n    this.element = element;\n    this.attached = false;\n    this.handleValueChange = this.handleValueChange.bind(this);\n  }\n\n  /**\n   * Attaches attribute listener to given element and starts listening.\n   * @returns {AttributeListener}\n   */\n  attach() {\n    if (!this.element.attributeListeners) this.element.attributeListeners = [];\n    this.element.attributeListeners.push(this);\n    this.listener.onValueChange(this.handleValueChange);\n    this.attached = true;\n\n    if (this.attributeKey === 'model') {\n      if (/(checkbox|radio)/.test(this.element.getAttribute('type'))) {\n        this.element.onchange = (e) => {\n          this.listener.component[this.listener.key] = e.target.checked;\n        };\n      } else {\n        this.element.oninput = (e) => {\n          this.listener.component[this.listener.key] = e.target.value;\n        };\n      }\n    }\n    return this;\n  }\n\n  /**\n   * @param {*} value\n   */\n  handleValueChange(value) {\n    if (this.attributeKey === 'value' || this.attributeKey === 'model') {\n      if (/(checkbox|radio)/.test(this.element.getAttribute('type'))) {\n        this.element.checked = value;\n      } else {\n        this.element.value = value;\n      }\n    } else {\n      setAttributes(this.element, { [this.attributeKey]: value });\n    }\n  }\n\n  /**\n   * @param {Node} newElement\n   */\n  updateElement(newElement) {\n    this.element = newElement;\n    return this.element;\n  }\n}\n","import listenerToNode from './listenerToNode';\nimport fuseDom from './fuseDom';\n\nexport default class ElementListener {\n  /**\n   * @param {object} options\n   * @param {Listener} options.listener\n   * @param {Node} options.element\n   */\n  constructor({ listener, element }) {\n    this.listener = listener;\n    this.element = element;\n    this.listenerAsNode = [];\n    this.attached = false;\n    this.handleValueChange = this.handleValueChange.bind(this);\n  }\n\n  /**\n   * Attaches listener to given element and starts listening.\n   * @returns {ElementListener}\n   */\n  attach() {\n    if (!this.element.listeners) this.element.listeners = [];\n    this.element.listeners.push(this);\n    this.listener.onValueChange(this.handleValueChange);\n    this.attached = true;\n    return this;\n  }\n\n  /**\n   * @param {*} value\n   */\n  handleValueChange(value) {\n    const newNode = listenerToNode(value);\n\n    var i = 0\n    for (const node of newNode) {\n      if (!this.listenerAsNode[i]) {\n        this.listenerAsNode.push(this.element.appendChild(node));\n      } else {\n        this.listenerAsNode[i] = fuseDom.fuse(this.listenerAsNode[i], node);\n      }\n      i+=1\n    }\n\n    if (i < this.listenerAsNode.length) {\n      var nodesLeft = this.listenerAsNode.splice(i-this.listenerAsNode.length);\n      for (const node of nodesLeft) {\n        fuseDom.destroy(node);\n        // node.remove();\n      }\n    }\n  }\n\n  /**\n   * @param {Node} newElement\n   */\n  updateElement(newElement) {\n    this.element = newElement;\n    return this.element;\n  }\n}\n","import setStyle from './setStyle';\n\nexport default class StyleListener {\n  /**\n   * @param {object} options\n   * @param {string} options.styleKey\n   * @param {Listener} options.listener\n   * @param {Node} options.element\n   */\n  constructor({ styleKey, listener, element }) {\n    this.styleKey = styleKey;\n    this.listener = listener;\n    this.element = element;\n    this.attached = false;\n    this.handleValueChange = this.handleValueChange.bind(this);\n  }\n\n  /**\n   * Attaches style listener to given element and starts listening.\n   * @returns {StyleListener}\n   */\n  attach() {\n    if (!this.element.styleListeners) this.element.styleListeners = [];\n    this.element.styleListeners.push(this);\n    this.listener.onValueChange(this.handleValueChange);\n    this.attached = true;\n    return this;\n  }\n\n  /**\n   * @param {*} value\n   */\n  handleValueChange(value) {\n    setStyle(this.element, this.styleKey, value);\n  }\n\n  /**\n   * @param {Node} newElement\n   */\n  updateElement(newElement) {\n    this.element = newElement;\n    return this.element;\n  }\n}\n","import ElementListener from './ElementListener';\n\n/**\n * @param {Listener} listener\n * @param {HTMLElement} element\n * @returns {ElementListener}\n */\nconst appendListenerToElement = (listener, element) =>\n  new ElementListener({\n    listener,\n    element,\n  }).attach();\n\nexport default appendListenerToElement;\n","/**\n * @param {*} value\n * @returns {*[]}\n */\nconst ensureArray = value => {\n  if (Array.isArray(value)) return value;\n  return [value];\n};\n\nexport default ensureArray;\n","\nconst copyAttrs = (newNode, oldNode) => {\n  var oldAttrs = oldNode.attributes;\n  var newAttrs = newNode.attributes;\n  var attrNamespaceURI = null;\n  var attrValue = null;\n  var fromValue = null;\n  var attrName = null;\n  var attr = null;\n\n  for (var i = newAttrs.length - 1; i >= 0; --i) {\n    attr = newAttrs[i];\n    attrName = attr.name;\n    attrNamespaceURI = attr.namespaceURI;\n    attrValue = attr.value;\n    // TODO: Change only specific parts of style\n    // if (attr.name === 'style') {\n    //   for (var item of newNode.style) {\n    //     if (oldNode.style[item] !== newNode.style[item]) oldNode.style[item] = newNode.style[item]\n    //   }\n    //   continue;\n    // }\n    if (attrNamespaceURI) {\n      attrName = attr.localName || attrName;\n      fromValue = oldNode.getAttributeNS(attrNamespaceURI, attrName);\n      if (fromValue !== attrValue) {\n        oldNode.setAttributeNS(attrNamespaceURI, attrName, attrValue);\n      }\n    } else {\n      if (!oldNode.hasAttribute(attrName)) {\n        oldNode.setAttribute(attrName, attrValue);\n      } else {\n        fromValue = oldNode.getAttribute(attrName);\n        if (fromValue !== attrValue) {\n          // apparently values are always cast to strings, ah well\n          if (attrValue === 'null' || attrValue === 'undefined') {\n            oldNode.removeAttribute(attrName);\n          } else {\n            oldNode.setAttribute(attrName, attrValue);\n          }\n        }\n      }\n    }\n  }\n\n  // Remove any extra attributes found on the original DOM element that\n  // weren't found on the target element.\n  for (var j = oldAttrs.length - 1; j >= 0; --j) {\n    attr = oldAttrs[j];\n    if (attr.specified !== false) {\n      attrName = attr.name;\n      attrNamespaceURI = attr.namespaceURI;\n\n      if (attrNamespaceURI) {\n        attrName = attr.localName || attrName;\n        if (!newNode.hasAttributeNS(attrNamespaceURI, attrName)) {\n          oldNode.removeAttributeNS(attrNamespaceURI, attrName);\n        }\n      } else {\n        if (!newNode.hasAttributeNS(null, attrName)) {\n          oldNode.removeAttribute(attrName);\n        }\n      }\n    }\n  }\n}\n\nconst destroy = node => {\n  if (!(node instanceof Node)) return;\n  var treeWalker = document.createTreeWalker(\n    node,\n    NodeFilter.SHOW_ELEMENT,\n    el => el && (typeof el.destroy === 'function'\n      || el.listeners),\n    false\n  );\n\n  var el;\n  while((el = treeWalker.nextNode())) {\n    // Unlink listeners for garbage collection\n    el.listeners = null;\n    el.destroy();\n    if (el.parentNode) el.parentNode.removeChild(el);\n  }\n\n  if (node.destroy) node.destroy();\n\n  if (node.parentNode) node.parentNode.removeChild(node);\n}\n\n/**\n * @param {HTMLElement} newNode\n * @param {HTMLElement} oldNode\n * @returns {ElementListener}\n */\nconst fuse = (toNode, fromNode, childOnly) => {\n  if (Array.isArray(fromNode) || Array.isArray(toNode)) childOnly = true;\n\n  if (!childOnly) {\n    const nt1 = toNode.nodeType;\n    const nt2 = fromNode.nodeType;\n\n    if (nt1 === nt2 && (nt1 === 3 || nt2 === 8)) {\n      if (!toNode.isEqualNode(fromNode)) {\n        // toNode.textContent = fromNode.textContent\n        toNode.nodeValue = fromNode.nodeValue;\n        // toNode.replaceWith(fromNode)\n        destroy(fromNode);\n      }\n      return toNode;\n    }\n\n    if (fromNode.destroy || toNode.destroy || fromNode.__async || fromNode.__async\n      || toNode.listeners || fromNode.listeners\n      || nt1 === 3 || nt2 === 3) {\n      if (!toNode.isEqualNode(fromNode)) {\n        toNode.parentNode.insertBefore(fromNode, toNode);\n        destroy(toNode);\n      }\n      return fromNode;\n    }\n\n    copyAttrs(fromNode, toNode);\n  }\n\n  let a1 = [ ...toNode.childNodes || toNode ];\n  let a2 = [ ...fromNode.childNodes || fromNode ];\n  let max = Math.max(a1.length, a2.length);\n\n  for (var i = 0; i < max; i++) {\n    if (a1[i] && a2[i]) {\n      // Fuse\n      fuse(a1[i], a2[i]);\n    } else\n    if (a1[i] && !a2[i]) {\n      // Remove\n      destroy(a1[i]);\n    } else\n    if (!a1[i] && a2[i]) {\n      // Add\n      toNode.appendChild(a2[i]);\n    }\n  }\n\n  destroy(fromNode);\n  return toNode;\n}\n\nclass FuseDom {\n  fuse(...args) {\n    return fuse(...args);\n  }\n  destroy(...args) {\n    return destroy(...args);\n  }\n}\n\nexport default new FuseDom();\n","/**\n * @param {*} query\n * @returns {Node}\n */\nconst getElementFromQuery = query => {\n  if (typeof query === 'string') return query !== 'template'\n    ? document.createElement(query)\n    : document.createDocumentFragment();\n  console.warn(\n    '[Radi.js] Warn: Creating a JSX element whose query is not of type string, automatically converting query to string.'\n  );\n  return document.createElement(query.toString());\n};\n\nexport default getElementFromQuery;\n","import appendChildren from '../appendChildren';\nimport ensureArray from './ensureArray';\n\n/**\n * @param {*} value - Value of the listener\n * @returns {Node[]}\n */\nconst listenerToNode = value => {\n  if (value instanceof DocumentFragment) {\n    return Array.from(value.childNodes);\n  }\n\n  const element = document.createDocumentFragment();\n  appendChildren(element, ensureArray(value));\n  return listenerToNode(element);\n};\n\nexport default listenerToNode;\n","/**\n * @param {*} value\n * @return {*}\n */\nconst parseClass = value => {\n  if (Array.isArray(value)) {\n    return value.filter(item => item).join(' ')\n  }\n  return value;\n}\n\nexport default parseClass;\n","/**\n * @param {*} value\n * @return {*}\n */\nconst parseValue = value =>\n  typeof value === 'number' && !Number.isNaN(value) ? `${value}px` : value;\n\nexport default parseValue;\n","/* eslint-disable no-param-reassign */\n// -- until this can be rewritten as a pure function, we need to reassign.\n\nimport Listener from '../../listen/Listener';\nimport StyleListener from '../utils/StyleListener';\nimport parseValue from './parseValue';\n\n/**\n * @param {HTMLElement} element\n * @param {string} property\n * @param {string} value\n * @returns {*}\n */\nconst setStyle = (element, property, value) => {\n  if (typeof value === 'undefined') return undefined;\n\n  if (value instanceof Listener) {\n    new StyleListener({\n      styleKey: property,\n      listener: value,\n      element,\n    }).attach();\n    return element[property];\n  }\n\n  return element.style[property] = parseValue(value);\n};\n\nexport default setStyle;\n","/**\n * @param {*} obj\n * @returns {*}\n */\nconst clone = obj => {\n  if (typeof obj !== 'object') return obj;\n  if (obj === null) return obj;\n  if (Array.isArray(obj)) return obj.map(clone);\n\n  /*eslint-disable*/\n  // Reverted as currently throws some errors\n  const cloned = {};\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      cloned[key] = clone(obj[key]);\n    }\n  }\n  /* eslint-enable */\n\n  return cloned;\n};\n\nexport default clone;\n","/**\n * UUID v4 generator\n * https://gist.github.com/jcxplorer/823878\n * @returns {string}\n */\nconst generateId = () => {\n  let uuid = '';\n  for (let i = 0; i < 32; i++) {\n    const random = (Math.random() * 16) | 0; // eslint-disable-line\n\n    if (i === 8 || i === 12 || i === 16 || i === 20) {\n      uuid += '-';\n    }\n    uuid += (i === 12 ? 4 : i === 16 ? (random & 3) | 8 : random).toString(16); // eslint-disable-line\n  }\n  return uuid;\n};\n\nexport default generateId;\n","import GLOBALS from '../consts/GLOBALS';\n\nconst remountActiveComponents = () => {\n  Object.values(GLOBALS.ACTIVE_COMPONENTS).forEach(component => {\n    if (typeof component.onMount === 'function') {\n      component.onMount(component);\n    }\n  });\n};\n\nexport default remountActiveComponents;\n","const skipInProductionAndTest = fn => {\n  if (process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'test') {\n    return false;\n  }\n  return fn && fn();\n};\n\nexport default skipInProductionAndTest;\n"],"sourceRoot":""}